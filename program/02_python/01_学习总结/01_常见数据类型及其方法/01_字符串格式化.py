'''
方法一：S.%()
常用占位符类型：%s，%d，%f（未指定精度则默认输出6位小数）
格式控制信息：填充（标表）|对齐|宽度.精度|数据类型
1.填充：当宽度大于字符串长度时，指定用于填充多余长度的宽度，默认为空格
2.显示符号：  -：左对齐(默认为右对齐)
            +：显示正负号
            ‘’（空格）：正数前加空格，以对其正负号，不如直接用正号得了
3.宽度：指定用于替代占位符的宽度，如果字符串长度大于宽度，则以原字符串长度进行填充，也即指定的宽度无效
4.精度：对于浮点数而言，精度指小数点后的位数；对于字符串而言，精度指截取字符串输出的长度
5.%s    %d   %f

注：1.精度与宽度可以*号代替，从%后的元组中读入
   2.也可从字典中读入数据，但是占位符前需要是如下形式 %（不带引号的key）s


方法二：S.format（）
格式控制信息：
<参数标号（key）>：<填充><对齐><宽度>,<.精度><类型>
1.填充：同上
2.对其：  <:左对齐
         >:右对齐
         ^:居中对齐
3.同上
4. , :千分位分隔符，如1,000,000
5.精度：同上
6.类型：     对于整数：b: 输出整数的二进制方式；
                    c: 输出整数对应的 Unicode 字符；
                    d: 输出整数的十进制方式；
                    o: 输出整数的八进制方式；
                    x: 输出整数的小写十六进制方式；
                    X: 输出整数的大写十六进制方式；
          对于浮点数:f:标准浮点数输出格式
https://blog.csdn.net/i_chaoren/article/details/77922939

'''

print('方法一'.center(40,'*'))
# print('圆周率是无理数，数值为%+*.*f'%(10,2,3.1415926))
# print('圆周率是%s，数值为%.2f'%('无理数',3.1415926))
print('圆周率是%s，数值为%0 *.*f'%('无理数',10,2,3.1415926))

person = {'小强':1001,'小丽':1002}
print('小强的学号是：%(小强)s'%person)


print('方法二'.center(40,'*'))
print('圆周率是{},数值为{}'.format('无理数',3.1415))       #通过默认位置
print('圆周率是{1},数值为{0}'.format(3.1415,'无理数'))     #通过指定顺序
print('{name}今年{age}岁了！'.format(name = 'ming',age = 18))  #通过关键字
print('圆周率是{0},数值为{1:*^20,.5f}'.format('无理数',3.1415926666))

