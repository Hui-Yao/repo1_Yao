#!/usr/bin/env python
#-*- coding:utf-8 -*-
# Author = "Hui_Yao"

'''
c语言与python的变量赋值的区别：
C语言：变量与内存地址绑定。当要修改变量的内容时，直接将内存地址中的数据替换，变量与内存地址的绑定关系不变。
Python：变量指向数据所在的内存地址。当要修改变量的内容时，可能直接在划出一块新的内存区域用于存放数据，
        变量再指向该数据的地址。变量与内存地址是指向关系，无绑定关系。

Python的内存回收机制：
x = 1   #x指向数据1的地址，该地址被一次引用
y = x   #将x赋给y，y也指向1，则数据1的地址被两次引用

Python中专门有文件来记录程序中各个数据的被引用次数，当某数据的地址的引用次数为0时，系统就会释放该内存地址。
例如： x=2     #系统在内存中划出一块区域，存放数据2，并将x指向数据2的内存地址。此时数据1的内存地址的引用次数减1
      y=3     #同上。此时数据1的内存地址的引用次数再次减1，为0，这个数据已经不用了，系统便会将其回收释放。

'''

